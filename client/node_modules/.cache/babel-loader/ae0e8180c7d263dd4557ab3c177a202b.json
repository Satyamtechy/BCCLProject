{"ast":null,"code":"const express = require('express');\n\nconst mysql = require('mysql');\n\nconst cors = require('cors');\n\nconst dotenv = require('dotenv');\n\nconst {\n  Redirect\n} = require('react-router');\n\nconst app = express();\napp.use(cors());\napp.use(express.json()); //Middleware\n\nconst middleware = (req, res, next) => {\n  console.log();\n  next();\n};\n\nmiddleware();\napp.get('/', (req, res) => {\n  res.send(`hello`);\n});\napp.get('/login', (req, res) => {\n  res.send(`hello login`);\n});\napp.get('/headquater', middleware, (req, res) => {\n  res.send(`hello headquater`);\n});\nconst db = mysql.createConnection({\n  user: \"root\",\n  host: \"localhost\",\n  password: \"satyam\",\n  database: \"LoginSystem\"\n});\ndb.connect(db, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false\n}).then(() => {\n  console.log(`connection established`);\n}).catch(err => {\n  console.log(`no connection`);\n});\napp.post('/login', (req, res) => {\n  const username = req.body.username;\n  const password = req.body.password;\n  db.query(\"SELECT * FROM users WHERE username=? AND password=?\", [username, password], (err, result) => {\n    if (err) {\n      res.send({\n        err: err\n      });\n    } else if (result) {\n      res.send(result);\n    } else {\n      res.send({\n        message: \"wrong credentials\"\n      });\n    }\n  });\n});\napp.listen(3000, () => {\n  console.log(\"running server\");\n});","map":{"version":3,"sources":["D:/BCCL/bccl/src/App.js"],"names":["express","require","mysql","cors","dotenv","Redirect","app","use","json","middleware","req","res","next","console","log","get","send","db","createConnection","user","host","password","database","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","then","catch","err","post","username","body","query","result","message","listen"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,IAAI,GAACF,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMG,MAAM,GAACH,OAAO,CAAC,QAAD,CAApB;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeJ,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMK,GAAG,GAACN,OAAO,EAAjB;AACAM,GAAG,CAACC,GAAJ,CAAQJ,IAAI,EAAZ;AACAG,GAAG,CAACC,GAAJ,CAAQP,OAAO,CAACQ,IAAR,EAAR,E,CAEA;;AAEA,MAAMC,UAAU,GAAC,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAgB;AAC7BC,EAAAA,OAAO,CAACC,GAAR;AACAF,EAAAA,IAAI;AACP,CAHD;;AAKAH,UAAU;AAEVH,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAY,CAACL,GAAD,EAAKC,GAAL,KAAW;AACnBA,EAAAA,GAAG,CAACK,IAAJ,CAAU,OAAV;AACH,CAFD;AAGAV,GAAG,CAACS,GAAJ,CAAQ,QAAR,EAAiB,CAACL,GAAD,EAAKC,GAAL,KAAW;AACxBA,EAAAA,GAAG,CAACK,IAAJ,CAAU,aAAV;AACH,CAFD;AAGAV,GAAG,CAACS,GAAJ,CAAQ,aAAR,EAAsBN,UAAtB,EAAiC,CAACC,GAAD,EAAKC,GAAL,KAAW;AACxCA,EAAAA,GAAG,CAACK,IAAJ,CAAU,kBAAV;AACH,CAFD;AAMA,MAAMC,EAAE,GAAGf,KAAK,CAACgB,gBAAN,CAAuB;AAChCC,EAAAA,IAAI,EAAC,MAD2B;AAEhCC,EAAAA,IAAI,EAAC,WAF2B;AAGhCC,EAAAA,QAAQ,EAAC,QAHuB;AAIhCC,EAAAA,QAAQ,EAAC;AAJuB,CAAvB,CAAX;AAMAL,EAAE,CAACM,OAAH,CAAWN,EAAX,EAAc;AACVO,EAAAA,eAAe,EAAC,IADN;AAEVC,EAAAA,cAAc,EAAC,IAFL;AAGVC,EAAAA,kBAAkB,EAAC,IAHT;AAIVC,EAAAA,gBAAgB,EAAC;AAJP,CAAd,EAKGC,IALH,CAKQ,MAAI;AACRf,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb;AACH,CAPD,EAOGe,KAPH,CAOUC,GAAD,IAAO;AACZjB,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAb;AACH,CATD;AAWAR,GAAG,CAACyB,IAAJ,CAAS,QAAT,EAAkB,CAACrB,GAAD,EAAKC,GAAL,KAAW;AAE3B,QAAMqB,QAAQ,GAACtB,GAAG,CAACuB,IAAJ,CAASD,QAAxB;AACA,QAAMX,QAAQ,GAACX,GAAG,CAACuB,IAAJ,CAASZ,QAAxB;AAGAJ,EAAAA,EAAE,CAACiB,KAAH,CAAS,qDAAT,EAA+D,CAACF,QAAD,EAAUX,QAAV,CAA/D,EAAmF,CAACS,GAAD,EAAKK,MAAL,KAAc;AAC/F,QAAGL,GAAH,EAAO;AACLnB,MAAAA,GAAG,CAACK,IAAJ,CAAS;AAACc,QAAAA,GAAG,EAACA;AAAL,OAAT;AACD,KAFD,MAGK,IAAGK,MAAH,EAAU;AACbxB,MAAAA,GAAG,CAACK,IAAJ,CAASmB,MAAT;AACD,KAFI,MAGD;AACFxB,MAAAA,GAAG,CAACK,IAAJ,CAAS;AAACoB,QAAAA,OAAO,EAAC;AAAT,OAAT;AACD;AACF,GAVD;AAWD,CAjBD;AAmBA9B,GAAG,CAAC+B,MAAJ,CAAW,IAAX,EAAgB,MAAI;AAClBxB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,CAFD","sourcesContent":["const express = require('express');\r\nconst mysql = require('mysql');\r\nconst cors=require('cors');\r\nconst dotenv=require('dotenv')\r\nconst { Redirect } = require('react-router');\r\nconst app=express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n//Middleware\r\n\r\nconst middleware=(req,res,next)=>{\r\n    console.log();\r\n    next(); \r\n}\r\n \r\nmiddleware();\r\n\r\napp.get('/',(req,res)=>{\r\n    res.send(`hello`)\r\n})\r\napp.get('/login',(req,res)=>{\r\n    res.send(`hello login`)\r\n})\r\napp.get('/headquater',middleware,(req,res)=>{\r\n    res.send(`hello headquater`)\r\n})\r\n\r\n\r\n\r\nconst db = mysql.createConnection({\r\n  user:\"root\",\r\n  host:\"localhost\",\r\n  password:\"satyam\", \r\n  database:\"LoginSystem\"\r\n})\r\ndb.connect(db,{\r\n    useNewUrlParser:true,\r\n    useCreateIndex:true,\r\n    useUnifiedTopology:true,\r\n    useFindAndModify:false\r\n}).then(()=>{\r\n    console.log(`connection established`);\r\n}).catch((err)=>{\r\n    console.log(`no connection`)\r\n});\r\n\r\napp.post('/login',(req,res)=>{\r\n  \r\n  const username=req.body.username;\r\n  const password=req.body.password;\r\n  \r\n  \r\n  db.query(\"SELECT * FROM users WHERE username=? AND password=?\",[username,password],(err,result)=>{\r\n    if(err){\r\n      res.send({err:err});\r\n    }\r\n    else if(result){\r\n      res.send(result);\r\n    }\r\n    else{\r\n      res.send({message:\"wrong credentials\"});\r\n    }\r\n  })\r\n})\r\n\r\napp.listen(3000,()=>{\r\n  console.log(\"running server\")\r\n})"]},"metadata":{},"sourceType":"module"}