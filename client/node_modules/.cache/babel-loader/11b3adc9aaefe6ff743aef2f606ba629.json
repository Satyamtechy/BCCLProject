{"ast":null,"code":"var _jsxFileName = \"/mnt/d/BCCL/client/src/Components/Demo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@material-ui/core';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Demo = () => {\n  _s();\n\n  const paperStyle = {\n    padding: '30px 20px',\n    width: 300,\n    margin: \"20px auto\"\n  };\n  const headerStyle = {\n    margin: 0\n  };\n  const avatarStyle = {\n    backgroundColor: '#1bbd7e'\n  };\n  const history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    work: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n\n  const handleInputs = e => {\n    console.log(e); // name = e.target.name;\n    // value = e.target.value;\n\n    let {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      phone,\n      work,\n      password,\n      cpassword\n    } = user;\n    const res = await fetch(\"/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phone,\n        work,\n        password,\n        cpassword\n      })\n    });\n    const data = await res.json();\n\n    if (res.status === 422 || !data) {\n      window.alert(\"Invalid Registration\");\n      console.log(\"Invalid Registration\");\n    } else {\n      window.alert(\"Registration Successful\");\n      console.log(\"valid Registration\");\n      history.push(\"/login\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 20,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: avatarStyle,\n          children: /*#__PURE__*/_jsxDEV(AddCircleOutlineOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: headerStyle,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          gutterBottom: true,\n          children: \"Please fill this form to create an account !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Name\",\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          autoComplete: \"off\",\n          value: user.name,\n          onChange: handleInputs,\n          placeholder: \"Enter Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          autoComplete: \"off\",\n          value: user.email,\n          onChange: handleInputs,\n          placeholder: \"Enter Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Phone Number\",\n          placeholder: \"Enter your phone number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Confirm Password\",\n          placeholder: \"Confirm your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Demo, \"WNnFFDUk7IEUjCR+aOvhBB51xAE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/mnt/d/BCCL/client/src/Components/Demo.js"],"names":["React","useState","useHistory","Grid","Paper","Avatar","Typography","TextField","Button","AddCircleOutlineOutlinedIcon","Demo","paperStyle","padding","width","margin","headerStyle","avatarStyle","backgroundColor","history","user","setUser","name","email","phone","work","password","cpassword","handleInputs","e","console","log","value","target","PostData","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert","push"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@material-ui/core'\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nconst Demo = () => {\r\n    const paperStyle = { padding: '30px 20px', width: 300, margin: \"20px auto\" }\r\n    const headerStyle = { margin: 0 }\r\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    work: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n  });\r\n\r\n  const handleInputs = (e) => {\r\n    console.log(e);\r\n    // name = e.target.name;\r\n    // value = e.target.value;\r\n    let { name, value } = e.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const PostData = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, work, password, cpassword } = user;\r\n\r\n    const res = await fetch(\"/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        phone,\r\n        work,\r\n        password,\r\n        cpassword,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (res.status === 422 || !data) {\r\n      window.alert(\"Invalid Registration\");\r\n      console.log(\"Invalid Registration\");\r\n    } else {\r\n      window.alert(\"Registration Successful\");\r\n      console.log(\"valid Registration\");\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={20} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>\r\n                        <AddCircleOutlineOutlinedIcon />\r\n                    </Avatar>\r\n                    <h2 style={headerStyle}>Sign Up</h2>\r\n                    <Typography variant='caption' gutterBottom>Please fill this form to create an account !</Typography>\r\n                </Grid>\r\n                <form method=\"post\">\r\n                    <TextField fullWidth label='Name' type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  autoComplete=\"off\"\r\n                  value={user.name}\r\n                  onChange={handleInputs}\r\n                  placeholder=\"Enter Your Name\" />\r\n                    <TextField fullWidth label='Email' type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  autoComplete=\"off\"\r\n                  value={user.email}\r\n                  onChange={handleInputs}\r\n                  placeholder=\"Enter Your Email\" />\r\n                    <TextField fullWidth label='Phone Number' placeholder=\"Enter your phone number\" />\r\n                    <TextField fullWidth label='Password' placeholder=\"Enter your password\"/>\r\n                    <TextField fullWidth label='Confirm Password' placeholder=\"Confirm your password\"/>\r\n                    <Button type='submit' variant='contained' color='primary'>Sign up</Button>\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Demo;"]},"metadata":{},"sourceType":"module"}