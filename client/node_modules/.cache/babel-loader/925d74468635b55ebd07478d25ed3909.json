{"ast":null,"code":"var _jsxFileName = \"/mnt/d/BCCL/client/src/Components/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = () => {\n  _s();\n\n  const [input, setInput] = useState({\n    SerialNumber: \"\",\n    MaterialNumber: \"\",\n    MaterialDesc: \"\",\n    OpeningBalance: \"\",\n    RecievedQuantity: \"\",\n    IssueQuantity: \"\",\n    BalanceQuantity: \"\",\n    Date: \"\"\n  });\n\n  const handleInputForm = e => {\n    console.log(e);\n    let {\n      name,\n      value\n    } = e.target;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const PostInput = async e => {\n    e.preventDefault();\n    const {\n      SerialNumber,\n      MaterialNumber,\n      MaterialDesc,\n      OpeningBalance,\n      RecievedQuantity,\n      IssueQuantity,\n      BalanceQuantity,\n      Date\n    } = input;\n    const res = await fetch(\"/userinput\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        SerialNumber,\n        MaterialNumber,\n        MaterialDesc,\n        OpeningBalance,\n        RecievedQuantity,\n        IssueQuantity,\n        BalanceQuantity,\n        Date\n      })\n    });\n    const data = await res.json();\n\n    if (res.status === 422 || !data) {\n      //window.alert(\"Invalid Registration\");\n      console.log(\"Invalid Input\");\n    } else {\n      window.alert(\"Input Successful\");\n      console.log(\"Input Successful\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputForm\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputForm, \"Js1RL1OdeRdjapuJ4aToRRaYzNQ=\");\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["/mnt/d/BCCL/client/src/Components/InputForm.js"],"names":["React","useState","InputForm","input","setInput","SerialNumber","MaterialNumber","MaterialDesc","OpeningBalance","RecievedQuantity","IssueQuantity","BalanceQuantity","Date","handleInputForm","e","console","log","name","value","target","PostInput","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AAC/BI,IAAAA,YAAY,EAAC,EADkB;AAE/BC,IAAAA,cAAc,EAAC,EAFgB;AAG/BC,IAAAA,YAAY,EAAC,EAHkB;AAI/BC,IAAAA,cAAc,EAAC,EAJgB;AAK/BC,IAAAA,gBAAgB,EAAC,EALc;AAM/BC,IAAAA,aAAa,EAAC,EANiB;AAO/BC,IAAAA,eAAe,EAAC,EAPe;AAQ/BC,IAAAA,IAAI,EAAC;AAR0B,GAAD,CAAlC;;AAUA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,QAAI;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBJ,CAAC,CAACK,MAAxB;AAEAf,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACc,IAAD,GAAQC;AAApB,KAAD,CAAR;AACH,GALD;;AAMA,QAAME,SAAS,GAAG,MAAON,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACO,cAAF;AAEA,UAAM;AAAChB,MAAAA,YAAD;AAAcC,MAAAA,cAAd;AAA6BC,MAAAA,YAA7B;AAA0CC,MAAAA,cAA1C;AAAyDC,MAAAA,gBAAzD;AAA0EC,MAAAA,aAA1E;AAAwFC,MAAAA,eAAxF;AAAwGC,MAAAA;AAAxG,QAAiHT,KAAvH;AAEA,UAAMmB,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBvB,QAAAA,YADmB;AAEnBC,QAAAA,cAFmB;AAGnBC,QAAAA,YAHmB;AAInBC,QAAAA,cAJmB;AAKnBC,QAAAA,gBALmB;AAMnBC,QAAAA,aANmB;AAOnBC,QAAAA,eAPmB;AAQnBC,QAAAA;AARmB,OAAf;AAL8B,KAAf,CAAvB;AAiBA,UAAMiB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;;AAEA,QAAIR,GAAG,CAACS,MAAJ,KAAe,GAAf,IAAsB,CAACF,IAA3B,EAAiC;AAC/B;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAHD,MAGO;AACLgB,MAAAA,MAAM,CAACC,KAAP,CAAa,kBAAb;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,GA/BH;;AAgCA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvDD;;GAAMd,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst InputForm = () => {\r\n    \r\n    const [input, setInput] = useState({\r\n        SerialNumber:\"\",\r\n        MaterialNumber:\"\",\r\n        MaterialDesc:\"\",\r\n        OpeningBalance:\"\",\r\n        RecievedQuantity:\"\",\r\n        IssueQuantity:\"\",\r\n        BalanceQuantity:\"\",\r\n        Date:\"\",\r\n    });\r\n    const handleInputForm = (e) => {\r\n        console.log(e);\r\n        let { name, value } = e.target;\r\n    \r\n        setInput({ ...input, [name]: value });\r\n    };\r\n    const PostInput = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const {SerialNumber,MaterialNumber,MaterialDesc,OpeningBalance,RecievedQuantity,IssueQuantity,BalanceQuantity,Date } = input;\r\n    \r\n        const res = await fetch(\"/userinput\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            SerialNumber,\r\n            MaterialNumber,\r\n            MaterialDesc,\r\n            OpeningBalance,\r\n            RecievedQuantity,\r\n            IssueQuantity,\r\n            BalanceQuantity,\r\n            Date,\r\n          }),\r\n        });\r\n    \r\n        const data = await res.json();\r\n    \r\n        if (res.status === 422 || !data) {\r\n          //window.alert(\"Invalid Registration\");\r\n          console.log(\"Invalid Input\");\r\n        } else {\r\n          window.alert(\"Input Successful\");\r\n          console.log(\"Input Successful\");\r\n        }\r\n      };\r\n    return (\r\n        <div className=\"inputForm\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputForm\r\n"]},"metadata":{},"sourceType":"module"}