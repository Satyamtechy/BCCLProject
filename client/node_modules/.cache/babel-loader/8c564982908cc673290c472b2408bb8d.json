{"ast":null,"code":"var _jsxFileName = \"/mnt/d/BCCL/client/src/Components/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100vw',\n    backgroundColor: theme.palette.grey[300],\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Display = () => {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [displays, setDisplays] = useState([]);\n\n  const getData = async () => {\n    try {\n      const data = await fetch(\"/display\");\n\n      if (data.ok) {\n        const result = await data.json();\n        setDisplays(result);\n        console.log(result);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Store Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Material Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Material Desc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Opening Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Recieved Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Issue Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"BalanceQuantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Day & Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: displays.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.StoreName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.SerialNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.MaterialNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.MaterialDesc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.OpeningBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.RecievedQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.RecievedQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.RecievedQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.Day_and_Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination //rowsPerPageOptions={[10, 25, 100]}\n      //component=\"div\"\n      //count={rows.length}\n      , {\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Display, \"lA4IvxQ+naih/dduR738b6gp2Yk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/mnt/d/BCCL/client/src/Components/Display.js"],"names":["React","useState","useEffect","makeStyles","ThemeProvider","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useStyles","theme","root","width","backgroundColor","palette","grey","paddingTop","spacing","Display","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","displays","setDisplays","getData","data","fetch","ok","result","json","console","log","error","container","map","item","StoreName","SerialNumber","MaterialNumber","MaterialDesc","OpeningBalance","RecievedQuantity","Day_and_Date"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n      width: '100vw',\r\n      backgroundColor:theme.palette.grey[300],\r\n      paddingTop:theme.spacing(3)\r\n    }\r\n  }));\r\n\r\nconst Display = () => {\r\n\r\n    const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n    \r\n    const [displays,setDisplays]=useState([]);\r\n    const getData=async()=>{\r\n        try {\r\n            const data= await fetch(\"/display\")\r\n            if(data.ok){\r\n                const result=await data.json();\r\n                setDisplays(result)\r\n                console.log(result);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n<Paper className={classes.root}>\r\n      <TableContainer className={classes.container} component={Paper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead> \r\n            <TableRow>\r\n                <TableCell>Store Name</TableCell>\r\n                <TableCell>Serial Number</TableCell>\r\n                <TableCell>Material Number</TableCell>\r\n                <TableCell>Material Desc</TableCell>\r\n                <TableCell>Opening Balance</TableCell>\r\n                <TableCell>Recieved Quantity</TableCell>\r\n                <TableCell>Issue Quantity</TableCell>\r\n                <TableCell>BalanceQuantity</TableCell>\r\n                <TableCell>Day & Date</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {displays.map((item) => (\r\n            <TableRow>\r\n                <TableCell>\r\n                  {item.StoreName}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.SerialNumber}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.MaterialNumber}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.MaterialDesc}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.OpeningBalance}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.RecievedQuantity}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.RecievedQuantity}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.RecievedQuantity}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {item.Day_and_Date}\r\n                </TableCell>\r\n            </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        //rowsPerPageOptions={[10, 25, 100]}\r\n        //component=\"div\"\r\n        //count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Display\r\n"]},"metadata":{},"sourceType":"module"}