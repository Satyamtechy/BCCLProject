{"ast":null,"code":"var _jsxFileName = \"D:\\\\BCCL\\\\client\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Paper, Avatar, TextField, Button, Typography, Link } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  let name, value;\n\n  const handleInputs = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = user;\n    const requestOptions = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Context-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    };\n    fetch(\"/signin\", requestOptions).then(async res => {\n      const data = await res.json();\n\n      if (!data.ok) {\n        console.log(\"invalid login\");\n        const error = res.status;\n        return Promise.reject(error);\n      }\n    }).catch(error => {\n      console.log(\"login successfull\");\n      history.push(\"/headquater\");\n    });\n  };\n\n  const paperStyle = {\n    padding: 20,\n    height: '70vh',\n    width: 280,\n    margin: \"80px auto\"\n  };\n  const avatarStyle = {\n    backgroundColor: '#1bbd7e'\n  };\n  const btnstyle = {\n    margin: '8px 0',\n    outline: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"POST\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: paperStyle,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            style: avatarStyle,\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          placeholder: \"Enter username\",\n          fullWidth: true,\n          required: true,\n          name: \"username\",\n          value: user.username,\n          onChange: handleInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          placeholder: \"Enter password\",\n          fullWidth: true,\n          required: true,\n          name: \"password\",\n          value: user.password,\n          onChange: handleInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          style: btnstyle,\n          fullWidth: true,\n          value: \"login\",\n          onSu: PostData,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: \"Forgot password ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" Do you have an account ?\", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/signup\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"2GowIIfXfXs8ZYv/ljzvQL6/Xzo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/BCCL/client/src/Components/Login.js"],"names":["React","useState","Grid","Paper","Avatar","TextField","Button","Typography","Link","LockOutlinedIcon","FormControlLabel","Checkbox","useHistory","Login","history","user","setUser","username","password","name","value","handleInputs","e","target","PostData","preventDefault","requestOptions","method","mode","headers","body","JSON","stringify","fetch","then","res","data","json","ok","console","log","error","status","Promise","reject","catch","push","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","btnstyle","outline"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { Grid,Paper, Avatar, TextField, Button, Typography,Link } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Login=()=>{\r\n\r\n    const history = useHistory();\r\n    const [user,setUser]=useState({\r\n        username:\"\",\r\n        password:\"\"\r\n    })\r\n    let name,value;\r\n\r\n    \r\n    const handleInputs=(e)=>{\r\n        name=e.target.name;\r\n        value=e.target.value;\r\n\r\n        setUser({...user,[name]:value})\r\n    }\r\n\r\n    const PostData = async (e)=>{\r\n        e.preventDefault();\r\n        const {username,password} = user;\r\n        \r\n        const requestOptions={\r\n            method:\"POST\",\r\n            mode:\"no-cors\",\r\n            headers:{\r\n                \"Context-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                username,password\r\n            })\r\n        };\r\n\r\n        fetch(\"/signin\",requestOptions)\r\n        .then(async res=>{\r\n            const data =await res.json();\r\n        \r\n\r\n        \r\n        if(!data.ok){\r\n            console.log(\"invalid login\")\r\n            const error=(res.status)\r\n            return Promise.reject(error)\r\n        }\r\n    }).catch(error=>{\r\n            console.log(\"login successfull\")\r\n            \r\n            history.push(\"/headquater\") \r\n        });\r\n    }\r\n\r\n    const paperStyle={padding :20,height:'70vh',width:280, margin:\"80px auto\"}\r\n    const avatarStyle={backgroundColor:'#1bbd7e'}\r\n    const btnstyle={margin:'8px 0',outline:'none'}\r\n    return(\r\n        <form method=\"POST\">\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle}>\r\n                <Grid align='center'>\r\n                     <Avatar style={avatarStyle}><LockOutlinedIcon/></Avatar>\r\n                    <h2>Sign In</h2>\r\n                </Grid>\r\n                <TextField label='Username' placeholder='Enter username' fullWidth required name=\"username\" value={user.username} onChange={handleInputs}/>\r\n                <TextField label='Password' placeholder='Enter password' fullWidth required name=\"password\" value={user.password} onChange={handleInputs}/>\r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                    }\r\n                    label=\"Remember me\"\r\n                 />\r\n                <Button type='submit' color='primary' variant=\"contained\" style={btnstyle} fullWidth value=\"login\" onSu={PostData} >Login</Button>\r\n                <Typography >\r\n                     <Link href=\"#\" >\r\n                        Forgot password ?\r\n                </Link>\r\n                </Typography>\r\n                <Typography > Do you have an account ?\r\n                     <Link href=\"/signup\" >\r\n                        Sign Up \r\n                </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n        </form>\r\n    )\r\n                }\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}