{"ast":null,"code":"var _jsxFileName = \"/mnt/d/BCCL/client/src/Components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    phonenumber: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  let name, value;\n\n  const handleInputs = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      phonenumber,\n      username,\n      password\n    } = user;\n    const res = await fetch(\"http:localhost:5000/register\", {\n      method: \"POST\",\n      mode: \"same-origin\",\n      headers: {\n        \"Context-Type\": \"application/json\",\n        \"Access-Control-Request-Method\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        phonenumber,\n        username,\n        password\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 422 || !data) {\n      window.alert(\"invalid\");\n      console.log(\"invalid registration\");\n    } else {\n      console.log(\"registration successfull\");\n      history.push(\"/login\");\n    }\n  };\n\n  const paperStyle = {\n    padding: 20,\n    height: '70vh',\n    width: 280,\n    margin: \"80px auto\"\n  };\n  const avatarStyle = {\n    backgroundColor: '#1bbd7e'\n  };\n  const btnstyle = {\n    margin: '8px 0',\n    outline: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      method: \"post\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 10,\n          style: paperStyle,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              style: avatarStyle,\n              children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            placeholder: \"Enter name\",\n            fullWidth: true,\n            required: true,\n            name: \"name\",\n            value: user.name,\n            onChange: handleInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Phonenumber\",\n            placeholder: \"Enter phonenumber\",\n            fullWidth: true,\n            required: true,\n            name: \"phonenumber\",\n            value: user.phonenumber,\n            onChange: handleInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            placeholder: \"Enter username\",\n            fullWidth: true,\n            required: true,\n            name: \"username\",\n            value: user.username,\n            onChange: handleInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            placeholder: \"Enter password\",\n            fullWidth: true,\n            required: true,\n            name: \"password\",\n            value: user.password,\n            onChange: handleInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            style: btnstyle,\n            fullWidth: true,\n            value: \"login\",\n            onClick: PostData,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"COSiSfxKEDzsSzwurie4Y8aeX7w=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/mnt/d/BCCL/client/src/Components/Signup.js"],"names":["React","useState","Grid","Paper","Avatar","TextField","Button","LockOutlinedIcon","useHistory","Register","history","user","setUser","name","phonenumber","username","password","value","handleInputs","e","target","PostData","preventDefault","res","fetch","method","mode","headers","body","JSON","stringify","data","json","status","window","alert","console","log","push","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","btnstyle","outline"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { Grid,Paper, Avatar, TextField, Button} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {useHistory} from 'react-router-dom'\r\nconst Register=()=>{\r\n\r\n    const history = useHistory();\r\n    const [user,setUser]=useState({\r\n        name:\"\",\r\n        phonenumber:\"\",\r\n        username:\"\",\r\n        password:\"\"\r\n    })\r\n    let name,value;\r\n    const handleInputs=(e)=>{\r\n        name=e.target.name;\r\n        value=e.target.value;\r\n\r\n        setUser({...user,[name]:value})\r\n    }\r\n\r\n\r\n    const PostData = async (e)=>{\r\n        e.preventDefault();\r\n        const {name,phonenumber,username,password} = user;\r\n\r\n        const res = await fetch(\"http:localhost:5000/register\",{\r\n            method:\"POST\",\r\n            mode:\"same-origin\",\r\n            headers:{\r\n                \"Context-Type\":\"application/json\",\r\n                \"Access-Control-Request-Method\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,phonenumber,username,password\r\n            })\r\n\r\n        })\r\n\r\n        const data = await res.json();\r\n        if(data.status===422 || !data){\r\n            window.alert(\"invalid\");\r\n            console.log(\"invalid registration\")\r\n        }\r\n        else {\r\n            console.log(\"registration successfull\")\r\n            history.push(\"/login\") \r\n        }\r\n    }\r\n\r\n    const paperStyle={padding :20,height:'70vh',width:280, margin:\"80px auto\"}\r\n    const avatarStyle={backgroundColor:'#1bbd7e'}\r\n    const btnstyle={margin:'8px 0',outline:'none'}\r\n    return(\r\n        <>\r\n        <form className=\"form\"method=\"post\">\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle}>\r\n                <Grid align='center'>\r\n                     <Avatar style={avatarStyle}><LockOutlinedIcon/></Avatar>\r\n                    <h2>Register</h2>\r\n                </Grid>\r\n\r\n                <TextField label='Name' placeholder='Enter name' fullWidth required name=\"name\" value={user.name} onChange={handleInputs}/>\r\n                <TextField label='Phonenumber' placeholder='Enter phonenumber' fullWidth required name=\"phonenumber\" value={user.phonenumber} onChange={handleInputs}/>\r\n                <TextField label='Username' placeholder='Enter username' fullWidth required name=\"username\" value={user.username} onChange={handleInputs}/>\r\n                <TextField label='Password' placeholder='Enter password' fullWidth required name=\"password\" value={user.password} onChange={handleInputs}/>\r\n                \r\n                <Button type='submit' color='primary' variant=\"contained\" style={btnstyle}  fullWidth value=\"login\" onClick={PostData}>Register</Button>\r\n            </Paper>\r\n        </Grid>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}